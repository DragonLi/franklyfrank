data Zero=.

interface Send x = send : x -> Unit.

interface Abort = aborting : Zero.

bind : x -> {x -> y} -> y.
bind x f = f x.

abort : [Abort]x.
abort = bind (aborting!) {}.

pats : [Send x]a      -> [Abort]a.
pats      [t]         = pats (t!). {- NB: makes pats non-terminating -}
pats   [send x -> k]  = pats (k Unit).
pats    x             = x.

suspat : {[Send x]a}    -> [Abort]a.
suspat       m           = pats (m!).

interface Rand = rand : Float.

addRand : a -> [Rand]a.
addRand x = x.

randToRandom : [Rand]a -> [Random]a.
randToRandom x = x.

foo : {a} -> [Rand]a.
foo m = addRand (m!).

bar : {a} -> [Random]a.
bar m = randToRandom (foo m).

main : Int.
main = 0.
